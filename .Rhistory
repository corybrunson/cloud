library(devtools)
devel = TRUE
if (devel) {
load_all("~/Documents/edu/R/cloud")
} else {
install_github("corybrunson/cloud")
library(cloud)
}
library(knitr)
opts_chunk$set(echo=FALSE, results=FALSE, message=FALSE, warning=FALSE)
data(Target)
print(Target)
print(class(Target))
T_freq <- rep(1 / nrow(Target), ncol(Target))
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
text(Target, labels = rownames(Target), pos = 1)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
legend(x = -19, y = 19, box.lty = 0, legend = "Target example")
G <- barycenter(Target)
print(G)
# Vectors from barycenter to each point
T_vectors <- Target - do.call(rbind,
replicate(nrow(Target),
G,
simplify = FALSE))
# Plot barycenter and vectors therefrom to points in cloud
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
text(G, labels = "G", adj = c(1.5, 1.25))
for (i in 1:nrow(Target)) {
text(Target[i, , drop = FALSE], labels = rownames(Target)[i],
adj = .5 - (T_vectors[i, ] / sqrt(sum(T_vectors[i, ] ^ 2))))
}
arrows(x0 = G[, 1], y0 = G[, 2],
x1 = Target[, 1], y1 = Target[, 2],
length = .15, angle = 15)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
legend(x = -19, y = 19, box.lty = 0,
legend = "Target: barycentric characterization")
P <- c(0, 0)
P_in <- inertia(point = P, cloud = Target)
G_in <- inertia(point = G, cloud = Target)
T_var <- inertia(G, cloud = Target,
weights = T_freq)
print(c(center_inertia = P_in,
barycenter_inertia = G_in,
variance = T_var))
Ctas <- T_freq * apply(Target, 1, function(m) {
sum((m - G) ^ 2)
})
Ctrs <- Ctas / T_var
print(cbind(Ctas, Ctrs))
huyghen.test(point = P, cloud = Target, weights = T_freq)
# Three plots!
par(mfrow = c(1, 3))
# Plot points relative to center
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
segments(x0 = 0, y0 = 0, x1 = Target[, 1], y1 = Target[, 2])
text(x = P[1], y = P[2], labels = "P",
adj = c(sqrt(2), sqrt(2)))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot center relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
points(rbind(P, G),
pch = c(13, 21), bg = c("white", "grey"), cex = 2)
segments(x0 = P[1], y0 = P[2],
x1 = G[1], y1 = G[2])
text(x = rbind(P, G),
labels = c("P", "G"), adj = c(1, -1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot points relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
segments(x0 = G[1], y0 = G[2],
x1 = Target[, 1], y1 = Target[, 2])
text(x = G[1], y = G[2], labels = "G",
adj = c(sqrt(3), 1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Reset
par(mfrow = c(1, 1))
huyghen.test(point = P, cloud = Target, weights = T_freq)
huyghen.test(point = G, cloud = Target, weights = T_freq)
huyghen.test
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
axis
axis <- rbind(c(0, 0), c(2, 1))
axis_var <- direction.variance(cloud = Target, weights = T_freq,
subspace = axis)
print(axis_var)
# Three plots!
par(mfrow = c(1, 2))
# Plot cloud, axis, and residual segments
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
points(x = P[1], y = P[2], pch = 13, cex = 2)
m <- diff(axis[, 2]) / diff(axis[, 1])
abline(a = axis[1, 2] - m * axis[1, 1], b = m, lty = 2)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot center relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
points(rbind(P, G),
pch = c(13, 21), bg = c("white", "grey"), cex = 2)
segments(x0 = P[1], y0 = P[2],
x1 = G[1], y1 = G[2])
text(x = rbind(P, G),
labels = c("P", "G"), adj = c(1, -1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot cloud, new axis, and new residual segments
# Reset
par(mfrow = c(1, 1))
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
?match.arg
library(devtools)
devel = TRUE
if (devel) {
load_all("~/Documents/edu/R/cloud")
} else {
install_github("corybrunson/cloud")
library(cloud)
}
library(knitr)
opts_chunk$set(echo=FALSE, results=FALSE, message=FALSE, warning=FALSE)
data(Target)
print(Target)
print(class(Target))
T_freq <- rep(1 / nrow(Target), ncol(Target))
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
text(Target, labels = rownames(Target), pos = 1)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
legend(x = -19, y = 19, box.lty = 0, legend = "Target example")
G <- barycenter(Target)
print(G)
# Vectors from barycenter to each point
T_vectors <- Target - do.call(rbind,
replicate(nrow(Target),
G,
simplify = FALSE))
# Plot barycenter and vectors therefrom to points in cloud
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
text(G, labels = "G", adj = c(1.5, 1.25))
for (i in 1:nrow(Target)) {
text(Target[i, , drop = FALSE], labels = rownames(Target)[i],
adj = .5 - (T_vectors[i, ] / sqrt(sum(T_vectors[i, ] ^ 2))))
}
arrows(x0 = G[, 1], y0 = G[, 2],
x1 = Target[, 1], y1 = Target[, 2],
length = .15, angle = 15)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
legend(x = -19, y = 19, box.lty = 0,
legend = "Target: barycentric characterization")
P <- c(0, 0)
P_in <- inertia(point = P, cloud = Target)
G_in <- inertia(point = G, cloud = Target)
T_var <- inertia(G, cloud = Target,
weights = T_freq)
print(c(center_inertia = P_in,
barycenter_inertia = G_in,
variance = T_var))
Ctas <- T_freq * apply(Target, 1, function(m) {
sum((m - G) ^ 2)
})
Ctrs <- Ctas / T_var
print(cbind(Ctas, Ctrs))
huyghen.test(point = P, cloud = Target, weights = T_freq)
huyghen.test(point = G, cloud = Target, weights = T_freq)
# Three plots!
par(mfrow = c(1, 3))
# Plot points relative to center
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
segments(x0 = 0, y0 = 0, x1 = Target[, 1], y1 = Target[, 2])
text(x = P[1], y = P[2], labels = "P",
adj = c(sqrt(2), sqrt(2)))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot center relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
points(rbind(P, G),
pch = c(13, 21), bg = c("white", "grey"), cex = 2)
segments(x0 = P[1], y0 = P[2],
x1 = G[1], y1 = G[2])
text(x = rbind(P, G),
labels = c("P", "G"), adj = c(1, -1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot points relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
segments(x0 = G[1], y0 = G[2],
x1 = Target[, 1], y1 = Target[, 2])
text(x = G[1], y = G[2], labels = "G",
adj = c(sqrt(3), 1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Reset
par(mfrow = c(1, 1))
axis <- rbind(c(0, 0), c(2, 1))
axis_var <- direction.variance(cloud = Target, weights = T_freq,
subspace = axis, subspace_type = "affine")
print(axis_var)
print(direction.variance(cloud = Target, weights = T_freq,
subspace = affine.decomposition(axis)$linear.subspace))
axis
affine.decomposition(axis)
affine.decomposition(axis)$linear.subspace
axis_linear
axis_linear <- affine.decomposition(axis)$linear.subspace
axis_linear
projection(cloud = Target, subspace = axis_linear)
library(devtools)
devel = TRUE
if (devel) {
load_all("~/Documents/edu/R/cloud")
} else {
install_github("corybrunson/cloud")
library(cloud)
}
library(knitr)
opts_chunk$set(echo=FALSE, results=FALSE, message=FALSE, warning=FALSE)
data(Target)
print(Target)
print(class(Target))
T_freq <- rep(1 / nrow(Target), ncol(Target))
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
text(Target, labels = rownames(Target), pos = 1)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
legend(x = -19, y = 19, box.lty = 0, legend = "Target example")
G <- barycenter(Target)
print(G)
# Vectors from barycenter to each point
T_vectors <- Target - do.call(rbind,
replicate(nrow(Target),
G,
simplify = FALSE))
# Plot barycenter and vectors therefrom to points in cloud
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
text(G, labels = "G", adj = c(1.5, 1.25))
for (i in 1:nrow(Target)) {
text(Target[i, , drop = FALSE], labels = rownames(Target)[i],
adj = .5 - (T_vectors[i, ] / sqrt(sum(T_vectors[i, ] ^ 2))))
}
arrows(x0 = G[, 1], y0 = G[, 2],
x1 = Target[, 1], y1 = Target[, 2],
length = .15, angle = 15)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
legend(x = -19, y = 19, box.lty = 0,
legend = "Target: barycentric characterization")
P <- c(0, 0)
P_in <- inertia(point = P, cloud = Target)
G_in <- inertia(point = G, cloud = Target)
T_var <- inertia(G, cloud = Target,
weights = T_freq)
print(c(center_inertia = P_in,
barycenter_inertia = G_in,
variance = T_var))
Ctas <- T_freq * apply(Target, 1, function(m) {
sum((m - G) ^ 2)
})
Ctrs <- Ctas / T_var
print(cbind(Ctas, Ctrs))
huyghen.test(point = P, cloud = Target, weights = T_freq)
huyghen.test(point = G, cloud = Target, weights = T_freq)
# Three plots!
par(mfrow = c(1, 3))
# Plot points relative to center
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
segments(x0 = 0, y0 = 0, x1 = Target[, 1], y1 = Target[, 2])
text(x = P[1], y = P[2], labels = "P",
adj = c(sqrt(2), sqrt(2)))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot center relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
points(rbind(P, G),
pch = c(13, 21), bg = c("white", "grey"), cex = 2)
segments(x0 = P[1], y0 = P[2],
x1 = G[1], y1 = G[2])
text(x = rbind(P, G),
labels = c("P", "G"), adj = c(1, -1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot points relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
segments(x0 = G[1], y0 = G[2],
x1 = Target[, 1], y1 = Target[, 2])
text(x = G[1], y = G[2], labels = "G",
adj = c(sqrt(3), 1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Reset
par(mfrow = c(1, 1))
axis <- rbind(c(0, 0), c(2, 1))
axis_var <- direction.variance(cloud = Target, weights = T_freq,
subspace = axis, type = "affine")
print(axis_var)
print(direction.variance(cloud = Target, weights = T_freq,
subspace = affine.decomposition(axis)$linear.subspace))
axis <- rbind(c(0, 0), c(2, 1))
axis_var <- direction.variance(cloud = Target, weights = T_freq,
subspace = axis, type = "affine")
print(axis_var)
print(direction.variance(cloud = Target, weights = T_freq,
subspace = affine.decomposition(axis)$linear.subspace,
type = "linear"))
# Three plots!
par(mfrow = c(1, 2))
# Plot cloud, axis, and residual segments
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
Target, pch = 16,
xlab = "", ylab = "")
points(x = P[1], y = P[2], pch = 13, cex = 2)
m <- diff(axis[, 2]) / diff(axis[, 1])
abline(a = axis[1, 2] - m * axis[1, 1], b = m, lty = 2)
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot center relative to barycenter
plot(xlim = c(-19, 19), ylim = c(-19, 19), axes = FALSE, asp = 1,
x = c(), y = c(),
xlab = "", ylab = "")
points(rbind(P, G),
pch = c(13, 21), bg = c("white", "grey"), cex = 2)
segments(x0 = P[1], y0 = P[2],
x1 = G[1], y1 = G[2])
text(x = rbind(P, G),
labels = c("P", "G"), adj = c(1, -1))
rect(xleft = -19, xright = 19, ybottom = -19, ytop = 19, lty = 3)
# Plot cloud, new axis, and new residual segments
# Reset
par(mfrow = c(1, 1))
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
load_all("~/Documents/edu/R/cloud")
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
load_all("~/Documents/edu/R/cloud")
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
residual.square.mean(cloud=Target,weights=T_freq,subspace=axis)
residual.square.mean(cloud=Target,weights=T_freq,subspace=axis,type="affine")
T_barycenter
G
dc <- affine.decomposition(axis)
dc
G
rbind(0, dc$linear.subspace) + rep(G, each = nrow(dc$linear.subspace) + 1)
aff.subspace <- rbind(0, decomp$linear.subspace) +
rep(bc, each = nrow(decomp$linear.subspace) + 1)
as <- rbind(0, dc$linear.subspace) + rep(G, each = nrow(dc$linear.subspace) + 1)
as
dc$linear.subspace
rbind(0, dc$linear.subspace)
rep(G, each = nrow(dc$linear.subspace) + 1)
as
residual.square.mean(cloud=Target,weights=T_freq,subspace=aff.subspace,type="affine")
residual.square.mean(cloud=Target,weights=T_freq,subspace=as,type="affine")
distance(G,projection(G,axis))
distance(G,projection(G,as))
distance(G,projection(G,axis))^2
projection(G,axis,type="affine")
G
sqrt(1.2^2+2.4^2)
axis
as
load_all("~/Documents/edu/R/cloud")
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
axis
residual.square.mean(cloud=Target,weights=T_freq)
residual.square.mean(cloud=Target,weights=T_freq,subspace=axis,type="affine")
G
barycenter(Target)
dc <- affine.decomposition(axis)
dc
rm(as)
ps <- rbind(0, dc$linear.subspace)+rep(bc, each = nrow(dc$linear.subspace)+1)
ps <- rbind(0, dc$linear.subspace)+rep(G, each = nrow(dc$linear.subspace)+1)
ps
residual.square.mean(cloud=Target,weights=T_freq,subspace=ps,type="affine")
252-216
choose(7,2)
choose(9,2)
choose(11,2)
choose(12,2)
proj <- projection(cloud=Target,subspace=axis,type="affine")
proj
Target
distances(Target, proj)
dc <- affine.decomposition(axis)
dc
lp <- linear.projection(Target, dc$linear.subspace)
lp
ss <- dc$linear.subspace
ss
dc$linear.subspace
ls
ls <- dc$linear.subspace
ls
Target
lp
lp <- linear.projection(Target, ls)
lp
Target
plot(Target,pch=16)
points(lp,pch=1)
segments(x0=Target[, 1],y0=Target[, 2],x1=lp[, 1], y1=lp[, 2])
plot(Target,pch=16,asp=1)
points(lp,pch=1)
segments(x0=Target[, 1],y0=Target[, 2],x1=lp[, 1], y1=lp[, 2])
abline(a=0,b=1/2)
G
points(x=G[,1],y=G[,2],pch=16,cex=2)
G_proj <- projection(G, axis,type="affine")
G_proj
points(G_proj,pch=1,cex=2)
sum(T_freq)
T_freq
T_freq <- rep(1 / nrow(Target), nrow(Target))
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
T_freq
load_all("~/Documents/edu/R/cloud")
huyghen.general.test(cloud = Target, weights = T_freq, subspace = axis)
cloud.decomposition(cloud = Target, subspace = axis)
cloud.variance.test(cloud = Target, weights = T_freq, subspace = axis)
load_all("~/Documents/edu/R/cloud")
cloud.variance.test(cloud = Target, weights = T_freq, subspace = axis)
t(1:5)
?rnorm
som
tom
getwd()
setwd("..")
getwd()
library(devtools)
check()
check()
